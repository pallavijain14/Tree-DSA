/**
 * Definition for binary tree
 * class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) {
 *      val = x;
 *      left=null;
 *      right=null;
 *     }
 * }
 */
public class Solution {
	public ArrayList<ArrayList<Integer>> solve(TreeNode A) {
	    ArrayList<ArrayList<Integer>> res = new ArrayList<>();
	    ArrayList<Integer> level = new ArrayList<>();
	    Queue<TreeNode> queue = new LinkedList<>();
	    if (A == null)
	        return null;
	    queue.add(A);
	    queue.add(null);
	    TreeNode node;
	    while (!queue.isEmpty()) {
	        node = queue.remove();
	        if (node == null && queue.isEmpty()) {
	            res.add(new ArrayList<>(level));
	            break;
	        }
	        if (node == null) {
	            res.add(new ArrayList<>(level));
	            level.clear();
	            queue.add(null);
	            continue;
	        }
	        level.add(node.val);
	        if (node.left != null)
	            queue.add(node.left);
	        if (node.right != null) {
	            queue.add(node.right);
	        }
	    }
	    return res;
	}
}
