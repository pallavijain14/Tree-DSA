/**
 * Definition for binary tree
 * class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) {
 *      val = x;
 *      left=null;
 *      right=null;
 *     }
 * }
 */
class Pair {

    public TreeNode first;
    public int second;

    public Pair(TreeNode x, int y) {
        first = x;
        second = y;
    }
}
public class Solution {
    public ArrayList < Integer > solve(TreeNode A) {

        ArrayList < Integer > ans = new ArrayList < Integer > ();
        Queue < Pair > q = new LinkedList < > ();
        int l = 0;

        q.add(new Pair(A, 0));
        while (q.size() > 0) {
            TreeNode temp = q.peek().first;
            int temp_l = q.peek().second;

            if (temp.left != null) {
                q.add(new Pair(temp.left, temp_l + 1));
            }
            if (temp.right != null) {
                q.add(new Pair(temp.right, temp_l + 1));
            }
            if (temp_l == l) {
                // append the first node of each level to the answer
                ans.add(temp.val);
                l++;
            }
            q.remove();
        }
        return ans;
    }
}
